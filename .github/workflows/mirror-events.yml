name: Mirror events CSV hourly

on:
  schedule:
    - cron: "0 * * * *"   # every hour (UTC)
  workflow_dispatch:

concurrency:
  group: mirror-events
  cancel-in-progress: false

permissions:
  contents: write

env:
  BRANCH: main
  # Keep your public publish URL, but we add a cache-buster to avoid stale bytes.
  # (For instant updates you can later switch to /export?format=csv&gid=...)
  SRC_URL: https://docs.google.com/spreadsheets/d/e/2PACX-1vQgnEZCsF6om55MFRpD3Dy3xLNF0nSO7U228ijGXkZGSGPpZMqGitInVmgi6y8cYF56mEK8GOuGl0D7/pub?gid=0&single=true&output=csv
  DEST: assets/data/events.csv

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download CSV and overwrite repo file
        run: |
          set -euo pipefail
          mkdir -p "$(dirname "$DEST")"

          # Build URL with cache-buster param
          if [[ "$SRC_URL" == *"?"* ]]; then
            url="${SRC_URL}&t=$(date +%s%N)"
          else
            url="${SRC_URL}?t=$(date +%s%N)"
          fi

          tmp="$(mktemp)"
          echo "GET: $url"
          curl -fsSL --retry 5 --retry-delay 5 --max-time 60 \
               -A "RowanACDA/1.0 (GitHub Action)" \
               -H 'Cache-Control: no-cache, no-store, must-revalidate' \
               -H 'Pragma: no-cache' \
               "$url" -o "$tmp"

          if [ ! -s "$tmp" ]; then
            echo "::error::Downloaded file is empty."
            exit 1
          fi

          # Normalize line endings so git diffs are sane
          sed -e 's/\r$//' "$tmp" > "$DEST"
          rm -f "$tmp"

      - name: Commit if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Only commit if DEST changed
          if git diff --quiet -- "$DEST"; then
            echo "No change detected in $DEST; nothing to commit."
            exit 0
          fi

          git add "$DEST"
          git commit -m "chore(data): overwrite events.csv from published Google Sheet [skip ci]"

      - name: Rebase on remote & push
        run: |
          # If there was no commit above, this is a no-op.
          if git log -1 --pretty=%B | grep -q "overwrite events.csv from published Google Sheet"; then
            set -e
            git pull --rebase --autostash origin "$BRANCH" || { git rebase --abort; exit 1; }
            git push origin HEAD:"$BRANCH" || {
              echo "Non-fast-forward; refetch + rebase once, then retry push."
              git fetch origin "$BRANCH"
              git pull --rebase --autostash origin "$BRANCH" || { git rebase --abort; exit 1; }
              git push origin HEAD:"$BRANCH"
            }
          else
            echo "No commit to push."
          fi
