name: Mirror events CSV hourly

on:
  schedule:
    - cron: "0 * * * *"   # every hour (UTC)
  workflow_dispatch:

# avoid racing hourly runs
concurrency:
  group: mirror-events
  cancel-in-progress: false

# IMPORTANT: also set repository Settings → Actions → General → Workflow permissions = Read and write
permissions:
  contents: write
  pull-requests: write

env:
  BRANCH: main
  SRC_URL: https://docs.google.com/spreadsheets/d/e/2PACX-1vQgnEZCsF6om55MFRpD3Dy3xLNF0nSO7U228ijGXkZGSGPpZMqGitInVmgi6y8cYF56mEK8GOuGl0D7/pub?gid=0&single=true&output=csv
  DEST: assets/data/events.csv
  # set to "commit" to push directly (requires branch not protected), or "pr" to open/update a PR
  MODE: commit

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # ensure push permissions

      - name: Show repo state (diagnostic)
        run: |
          echo "On ref: $GITHUB_REF / branch env: $BRANCH"
          git status -sb || true
          git remote -v || true

      - name: Fetch latest CSV (cache-busted)
        id: fetch
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "$(dirname "$DEST")"
          tmp="$(mktemp)"

          # cache-bust Google + any intermediate caches
          BUSTER="$(date +%s)"
          URL="${SRC_URL}&t=${BUSTER}"

          echo "Downloading: $URL"
          curl -fsSL --retry 5 --retry-delay 5 --max-time 60 \
            -A "RowanACDA/1.0 (GitHub Action)" \
            -H 'Cache-Control: no-cache' -H 'Pragma: no-cache' \
            "$URL" -o "$tmp"

          if [ ! -s "$tmp" ]; then
            echo "::error::Downloaded file is empty."
            exit 1
          fi

          # If file identical, set output and bail
          if [ -f "$DEST" ] && cmp -s "$tmp" "$DEST"; then
            echo "No changes detected."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            rm -f "$tmp"
            exit 0
          fi

          mv "$tmp" "$DEST"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Configure git author
        if: steps.fetch.outputs.changed == 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit change
        if: steps.fetch.outputs.changed == 'true' && env.MODE == 'commit'
        run: |
          set -e
          git add "$DEST"
          git commit -m "chore(data): mirror events.csv from Google Sheets [skip ci]"
          # Rebase to avoid non-FF and then push
          git pull --rebase --autostash origin "$BRANCH" || { git rebase --abort; exit 1; }
          git push origin HEAD:"$BRANCH"

      - name: Create or update PR
        if: steps.fetch.outputs.changed == 'true' && env.MODE == 'pr'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore(data): mirror events.csv from Google Sheets"
          title: "Mirror events.csv from Google Sheets"
          body: "Automated mirror of events.csv."
          branch: chore/mirror-events-csv
          base: ${{ env.BRANCH }}
          labels: data, automation
          add-paths: ${{ env.DEST }}
